name: Git Mirror

on:
  workflow_dispatch:
  schedule:
    - cron: "*/20 * * * *"

jobs:
  mirror:
    runs-on: ubuntu-latest
    steps:

      - uses: actions/checkout@v2

      - uses: actions/setup-python@v2
        with:
          python-version: "3.11.0"
      - name: Unprotect branches
        run: |
          python -V
          pip -V
          pip install requests
          python unprotect_branches.py ${{ secrets.USER_GITLAB }} ${{ secrets.TOKEN_GITLAB }}

      - name: Login Source GitHub
        run: |
          gh --version
          echo "${{ secrets.TOKEN_GITHUB }}" | gh auth login --with-token
          gh auth status
          
      - name: List GitHub repos
        id: gh_list_repos
        run: |
          gh_repo_list=$(gh repo list -L 1000 --json name -t '{{range $i, $n := .}}{{if (gt $i 0)}},{{end}}{{$n.name}}{{end}}' | jq -r 'split(",") | sort | join(",")')
          echo "gh_repo_list=${gh_repo_list}" >> $GITHUB_OUTPUT
          echo "GitHub repos: ${gh_repo_list}"

      - name: List Gitlab repos
        id: gl_list_repos
        run: |
          gl_repo_list=$(curl -s "https://gitlab.com/api/v4/users/${{ secrets.USER_GITLAB }}/projects?private_token=${{ secrets.TOKEN_GITLAB }}&per_page=100" |  jq -r '. | map (.name) | sort | join(",")')
          echo "gl_repo_list=${gl_repo_list}" >> $GITHUB_OUTPUT
          echo "GitLab repos: ${gl_repo_list}"

      - name: List BitBucket repos
        id: bb_list_repos
        run: |
          bb_repo_list=$(curl --request GET -s -u "${{ secrets.USER_BITBUCKET }}:${{ secrets.TOKEN_BITBUCKET }}" --url "https://api.bitbucket.org/2.0/repositories/${{ secrets.USER_BITBUCKET }}?pagelen=100&fields=values.name" --header 'Accept: application/json' | jq -r '.values | map(.name) | sort | join(",")')
          echo "bb_repo_list=${bb_repo_list}" >> $GITHUB_OUTPUT
          echo "BitBucket repos: ${bb_repo_list}"
       
      - name: BitBucket to GitHub
        uses: ./
        with:
          source_protocol: https
          source_host: bitbucket.org
          source_username: ${{ secrets.USER_BITBUCKET }}
          source_token: ${{ secrets.TOKEN_BITBUCKET }}
          dest_protocol: https
          dest_host: github.com
          dest_username: ${{ secrets.USER_GITHUB }}
          dest_token: ${{ secrets.TOKEN_GITHUB }}
          dest_token_username: ${{ secrets.USER_GITHUB }}
          mirror_repos: ${{ steps.bb_list_repos.outputs.bb_repo_list }}
          dest_create_repo_script: |
            if ! gh auth status > /dev/null 2>&1; then
              echo "${INPUT_DEST_TOKEN}" | gh auth login --with-token > /dev/null 2>&1
              gh auth status > /dev/null 2>&1
            fi

            found=$(gh repo list ${INPUT_DEST_USERNAME} -L 1000 --json name -t "{{range .}}{{if (eq .name \"${REPO_NAME}\")}}{{.name}}{{end}}{{end}}")
            if [[ -n "${found}" ]]; then
              exit 0
            fi
            gh repo create "${INPUT_DEST_USERNAME}/${REPO_NAME}" --private > /dev/null 2>&1
            if [ $? -ne 0 ]; then
              echo "Failed to create GitHub repo ${REPO_NAME}"
            fi

          notify_prefix: "BitBucket to GitHub"
          ignore_error: "true"

      - name: GitHub to BitBucket
        uses: ./
        with:
          source_protocol: https
          source_host: github.com
          source_username: ${{ secrets.USER_GITHUB }}
          source_token: ${{ secrets.TOKEN_GITHUB }}
          dest_protocol: https
          dest_host: bitbucket.org
          dest_username: ${{ secrets.USER_BITBUCKET }}
          dest_token: ${{ secrets.TOKEN_BITBUCKET }}
          mirror_repos: ${{ steps.gh_list_repos.outputs.gh_repo_list }}
          dest_create_repo_script: |
            curl -s \
              -u "${INPUT_DEST_USERNAME}:${INPUT_DEST_TOKEN}" \
              -H 'Content-Type: application/json' \
              -d '{"scm":"git", "is_private": true}' \
              "https://api.bitbucket.org/2.0/repositories/${INPUT_DEST_USERNAME}/${REPO_NAME}" > /dev/null 2>&1
          notify_prefix: "GitHub to BitBucket"
          ignore_error: "true"

      - name: GitHub to GitLab
        uses: ./
        with:
          source_protocol: https
          source_host: github.com
          source_username: ${{ secrets.USER_GITHUB }}
          source_token: ${{ secrets.TOKEN_GITHUB }}
          dest_protocol: https
          dest_host: gitlab.com
          dest_username: ${{ secrets.USER_GITLAB }}
          dest_token: ${{ secrets.TOKEN_GITLAB }}
          mirror_repos: ${{ steps.gh_list_repos.outputs.gh_repo_list }}
          lark_webhook: ${{ secrets.LARK_WEBHOOK }}
          notify_prefix: "GitHub to GitLab"
          ignore_error: "true"
          dest_create_repo_script: |
            # load functions: gitlab_update_project, gitlab_create_project, urlencode
            source /mirror-git/functions/url.sh
            source /mirror-git/functions/gitlab.sh
            result=$(gitlab_update_project ${INPUT_DEST_TOKEN} $(urlencode ${INPUT_DEST_USERNAME}/${REPO_NAME}) "{\"lfs_enabled\":false, \"visibility\":\"private\"}") 
            if [[ "${result}" = "404" ]]; then
              result=$(gitlab_create_project ${INPUT_DEST_TOKEN} "{\"name\":\"${REPO_NAME}\",\"lfs_enabled\":false, \"visibility\":\"private\"}")
              if [[ "${result}" != "201" ]]; then
                echo "Failed to create gitlab project ${REPO_NAME}"
                exit 1
              fi
            fi

      - name: Gitlab to GitHub
        uses: ./
        with:
          source_protocol: https
          source_host: gitlab.com
          source_username: ${{ secrets.USER_GITLAB }}
          source_token: ${{ secrets.TOKEN_GITLAB }}
          dest_protocol: https
          dest_host: github.com
          dest_username: ${{ secrets.USER_GITHUB }}
          dest_token: ${{ secrets.TOKEN_GITHUB }}
          dest_token_username: ${{ secrets.USER_GITHUB }}
          mirror_repos: ${{ steps.gl_list_repos.outputs.gl_repo_list }}
          dest_create_repo_script: |
            if ! gh auth status > /dev/null 2>&1; then
              echo "${INPUT_DEST_TOKEN}" | gh auth login --with-token > /dev/null 2>&1
              gh auth status > /dev/null 2>&1
            fi

            found=$(gh repo list ${INPUT_DEST_USERNAME} -L 1000 --json name -t "{{range .}}{{if (eq .name \"${REPO_NAME}\")}}{{.name}}{{end}}{{end}}")
            if [[ -n "${found}" ]]; then
              exit 0
            fi
            gh repo create "${INPUT_DEST_USERNAME}/${REPO_NAME}" --private > /dev/null 2>&1
            if [ $? -ne 0 ]; then
              echo "Failed to create GitHub repo ${REPO_NAME}"
            fi

          notify_prefix: "Gitlab to GitHub"
          ignore_error: "true"

      - name: Gitlab to BitBucket
        uses: ./
        with:
          source_protocol: https
          source_host: gitlab.com
          source_username: ${{ secrets.USER_GITLAB }}
          source_token: ${{ secrets.TOKEN_GITLAB }}
          dest_protocol: https
          dest_host: bitbucket.org
          dest_username: ${{ secrets.USER_BITBUCKET }}
          dest_token: ${{ secrets.TOKEN_BITBUCKET }}
          mirror_repos: ${{ steps.gl_list_repos.outputs.gl_repo_list }}
          dest_create_repo_script: |
            curl -s \
              -u "${INPUT_DEST_USERNAME}:${INPUT_DEST_TOKEN}" \
              -H 'Content-Type: application/json' \
              -d '{"scm":"git", "is_private": true}' \
              "https://api.bitbucket.org/2.0/repositories/${INPUT_DEST_USERNAME}/${REPO_NAME}" > /dev/null 2>&1
          notify_prefix: "Gitlab to BitBucket"
          ignore_error: "true"

      - name: BitBucket to GitLab
        uses: ./
        with:
          source_protocol: https
          source_host: bitbucket.org
          source_username: ${{ secrets.USER_BITBUCKET }}
          source_token: ${{ secrets.TOKEN_BITBUCKET }}
          dest_protocol: https
          dest_host: gitlab.com
          dest_username: ${{ secrets.USER_GITLAB }}
          dest_token: ${{ secrets.TOKEN_GITLAB }}
          mirror_repos: ${{ steps.bb_list_repos.outputs.bb_repo_list }}
          lark_webhook: ${{ secrets.LARK_WEBHOOK }}
          notify_prefix: "BitBucket to GitLab"
          ignore_error: "true"
          dest_create_repo_script: |
            # load functions: gitlab_update_project, gitlab_create_project, urlencode
            source /mirror-git/functions/url.sh
            source /mirror-git/functions/gitlab.sh
            result=$(gitlab_update_project ${INPUT_DEST_TOKEN} $(urlencode ${INPUT_DEST_USERNAME}/${REPO_NAME}) "{\"lfs_enabled\":false, \"visibility\":\"private\"}") 
            if [[ "${result}" = "404" ]]; then            
              result=$(gitlab_create_project ${INPUT_DEST_TOKEN} "{\"name\":\"${REPO_NAME}\",\"lfs_enabled\":false, \"visibility\":\"private\"}")
              if [[ "${result}" != "201" ]]; then
                echo "Failed to create gitlab project ${REPO_NAME}"
                exit 1
              fi
            fi

